#Deploy script for Foku-api

language: ruby

env:
  - AWS_USER_ID="564835583352" AWS_ECR_API="564835583352.dkr.ecr.us-east-1.amazonaws.com/backend_web" AWS_REGION="us-east-1" REFERENCE="https://github.com/travis-ci/cat-party/blob/master/.travis.yml"
services:
   - docker
branches:
    only:
        - master



install:
  - bundle install --jobs=3 --retry=3

script:
  - bundle exec rake rspec
  - zip -r latest *
  - mkdir -p deploy_folder
  - mv latest.zip deploy_folder/latest.zip

#This script will upload the built containers to ECR to be deployed on a single EC2 instance with docker
#Give everything to ECR
before_deploy:
  - cd backend
  - docker --version  # document the version travis is using
  - pip install --user awscli # install aws cli w/o sudo
  - export PATH=$PATH:$HOME/.local/bin # put aws in the path
  - eval $(aws ecr get-login --region us-east-1 --no-include-email) #needs AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY envvars
  - docker build -t backend_web .
  - docker tag backend_web:latest $AWS_ECR_API:latest
  - docker push $AWS_ECR_API:latest
  - docker images
  - cd ..

deploy:
- provider: s3 #To upload the code to s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  local_dir: deploy_folder #from where
  skip_cleanup: true #use cache (doesn't work...)
  bucket: "grupo19-code" #target bucket to use
- provider: codedeploy #Uploading to target group
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  bucket: "grupo19-code" #target bucket to use, definaed before
  key: latest.zip #Source code, you can use any name but must be consistent
  bundle_type: zip
  application: chatApp
  deployment_group: autoscalingDeploy
  region: $AWS_REGION
  wait_until_deployed: true #wise thing to do
  on:
    branch: master
